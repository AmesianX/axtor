// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/LLVMContext.h>
#include <llvm/Module.h>
#include <llvm/DerivedTypes.h>
#include <llvm/Constants.h>
#include <llvm/GlobalVariable.h>
#include <llvm/Function.h>
#include <llvm/CallingConv.h>
#include <llvm/BasicBlock.h>
#include <llvm/Instructions.h>
#include <llvm/InlineAsm.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <llvm/Pass.h>
#include <llvm/PassManager.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/Assembly/PrintModulePass.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("OCL_builtins.bc", getGlobalContext());
 mod->setDataLayout("e-p:32:32-i64:64:64-f64:64:64-n1:8:16:32:64");
 mod->setTargetTriple("ptx32--");
 
 // Type Definitions
 std::vector<Type*>FuncTy_0_args;
 PointerType* PointerTy_1 = PointerType::get(IntegerType::get(mod->getContext(), 8), 3);
 
 FuncTy_0_args.push_back(PointerTy_1);
 PointerType* PointerTy_2 = PointerType::get(IntegerType::get(mod->getContext(), 8), 1);
 
 FuncTy_0_args.push_back(PointerTy_2);
 FuncTy_0_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_0_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_0_args.push_back(IntegerType::get(mod->getContext(), 1));
 FunctionType* FuncTy_0 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_0_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_3_args;
 FuncTy_3_args.push_back(PointerTy_2);
 FuncTy_3_args.push_back(PointerTy_1);
 FuncTy_3_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_3_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_3_args.push_back(IntegerType::get(mod->getContext(), 1));
 FunctionType* FuncTy_3 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_3_args,
  /*isVarArg=*/false);
 
 std::vector<Type*>FuncTy_4_args;
 FuncTy_4_args.push_back(PointerTy_2);
 FuncTy_4_args.push_back(IntegerType::get(mod->getContext(), 8));
 FuncTy_4_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_4_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_4_args.push_back(IntegerType::get(mod->getContext(), 1));
 FunctionType* FuncTy_4 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_4_args,
  /*isVarArg=*/false);
 
 
 // Function Declarations
 
 Function* func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib = mod->getFunction("_Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib");
 if (!func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib) {
 func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib = Function::Create(
  /*Type=*/FuncTy_0,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib", mod); 
 func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib->setCallingConv(71);
 }
 AttrListPtr func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib_PAL;
 {
  SmallVector<AttributeWithIndex, 4> Attrs;
  AttributeWithIndex PAWI;
  PAWI.Index = 1U; PAWI.Attrs = 0  | Attribute::NoCapture;
  Attrs.push_back(PAWI);
  PAWI.Index = 2U; PAWI.Attrs = 0  | Attribute::NoCapture;
  Attrs.push_back(PAWI);
  PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
  Attrs.push_back(PAWI);
  func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
  
 }
 func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib->setAttributes(func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib_PAL);
 
 Function* func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib = mod->getFunction("_Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib");
 if (!func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib) {
 func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib = Function::Create(
  /*Type=*/FuncTy_3,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib", mod); 
 func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib->setCallingConv(71);
 }
 AttrListPtr func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib_PAL;
 {
  SmallVector<AttributeWithIndex, 4> Attrs;
  AttributeWithIndex PAWI;
  PAWI.Index = 1U; PAWI.Attrs = 0  | Attribute::NoCapture;
  Attrs.push_back(PAWI);
  PAWI.Index = 2U; PAWI.Attrs = 0  | Attribute::NoCapture;
  Attrs.push_back(PAWI);
  PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
  Attrs.push_back(PAWI);
  func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
  
 }
 func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib->setAttributes(func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib_PAL);
 
 Function* func__Z11llvm_memsetPU3AS1cciib = mod->getFunction("_Z11llvm_memsetPU3AS1cciib");
 if (!func__Z11llvm_memsetPU3AS1cciib) {
 func__Z11llvm_memsetPU3AS1cciib = Function::Create(
  /*Type=*/FuncTy_4,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z11llvm_memsetPU3AS1cciib", mod); 
 func__Z11llvm_memsetPU3AS1cciib->setCallingConv(71);
 }
 AttrListPtr func__Z11llvm_memsetPU3AS1cciib_PAL;
 {
  SmallVector<AttributeWithIndex, 4> Attrs;
  AttributeWithIndex PAWI;
  PAWI.Index = 1U; PAWI.Attrs = 0  | Attribute::NoCapture;
  Attrs.push_back(PAWI);
  PAWI.Index = 4294967295U; PAWI.Attrs = 0  | Attribute::NoUnwind;
  Attrs.push_back(PAWI);
  func__Z11llvm_memsetPU3AS1cciib_PAL = AttrListPtr::get(Attrs.begin(), Attrs.end());
  
 }
 func__Z11llvm_memsetPU3AS1cciib->setAttributes(func__Z11llvm_memsetPU3AS1cciib_PAL);
 
 // Global Variable Declarations

 
 // Constant Definitions
 ConstantInt* const_int32_5 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
 ConstantInt* const_int32_6 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
 
 // Global Variable Definitions
 
 // Function Definitions
 
 // Function: _Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib (func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib)
 {
  Function::arg_iterator args = func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib->arg_begin();
  Value* ptr_dest = args++;
  ptr_dest->setName("dest");
  Value* ptr_src = args++;
  ptr_src->setName("src");
  Value* int32_len = args++;
  int32_len->setName("len");
  Value* int32_align = args++;
  int32_align->setName("align");
  Value* int1_isVolatile = args++;
  int1_isVolatile->setName("isVolatile");
  
  BasicBlock* label_entry = BasicBlock::Create(mod->getContext(), "entry",func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib,0);
  BasicBlock* label_for_body_lr_ph = BasicBlock::Create(mod->getContext(), "for.body.lr.ph",func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib,0);
  BasicBlock* label_for_body = BasicBlock::Create(mod->getContext(), "for.body",func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib,0);
  BasicBlock* label_for_end = BasicBlock::Create(mod->getContext(), "for.end",func__Z25llvm_memcpy_p2i8_p1i8_i32PU3AS3cPU3AS1ciib,0);
  
  // Block entry (label_entry)
  ICmpInst* int1_cmp2 = new ICmpInst(*label_entry, ICmpInst::ICMP_SGT, int32_len, const_int32_5, "cmp2");
  BranchInst::Create(label_for_body_lr_ph, label_for_end, int1_cmp2, label_entry);
  
  // Block for.body.lr.ph (label_for_body_lr_ph)
  GetElementPtrInst* ptr_lftr_limit = GetElementPtrInst::Create(ptr_dest, int32_len, "lftr.limit", label_for_body_lr_ph);
  BranchInst::Create(label_for_body, label_for_body_lr_ph);
  
  // Block for.body (label_for_body)
  Argument* fwdref_9 = new Argument(PointerTy_1);
  PHINode* ptr_dest_addr_05 = PHINode::Create(PointerTy_1, 2, "dest.addr.05", label_for_body);
  ptr_dest_addr_05->addIncoming(ptr_dest, label_for_body_lr_ph);
  ptr_dest_addr_05->addIncoming(fwdref_9, label_for_body);
  
  Argument* fwdref_10 = new Argument(PointerTy_2);
  PHINode* ptr_src_addr_04 = PHINode::Create(PointerTy_2, 2, "src.addr.04", label_for_body);
  ptr_src_addr_04->addIncoming(ptr_src, label_for_body_lr_ph);
  ptr_src_addr_04->addIncoming(fwdref_10, label_for_body);
  
  GetElementPtrInst* ptr_incdec_ptr = GetElementPtrInst::Create(ptr_src_addr_04, const_int32_6, "incdec.ptr", label_for_body);
  LoadInst* int8_11 = new LoadInst(ptr_src_addr_04, "", false, label_for_body);
  int8_11->setAlignment(1);
  GetElementPtrInst* ptr_incdec_ptr1 = GetElementPtrInst::Create(ptr_dest_addr_05, const_int32_6, "incdec.ptr1", label_for_body);
  StoreInst* void_12 = new StoreInst(int8_11, ptr_dest_addr_05, false, label_for_body);
  void_12->setAlignment(1);
  ICmpInst* int1_exitcond = new ICmpInst(*label_for_body, ICmpInst::ICMP_EQ, ptr_incdec_ptr1, ptr_lftr_limit, "exitcond");
  BranchInst::Create(label_for_end, label_for_body, int1_exitcond, label_for_body);
  
  // Block for.end (label_for_end)
  ReturnInst::Create(mod->getContext(), label_for_end);
  
  // Resolve Forward References
  fwdref_10->replaceAllUsesWith(ptr_incdec_ptr); delete fwdref_10;
  fwdref_9->replaceAllUsesWith(ptr_incdec_ptr1); delete fwdref_9;
  
 }
 
 // Function: _Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib (func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib)
 {
  Function::arg_iterator args = func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib->arg_begin();
  Value* ptr_dest_15 = args++;
  ptr_dest_15->setName("dest");
  Value* ptr_src_16 = args++;
  ptr_src_16->setName("src");
  Value* int32_len_17 = args++;
  int32_len_17->setName("len");
  Value* int32_align_18 = args++;
  int32_align_18->setName("align");
  Value* int1_isVolatile_19 = args++;
  int1_isVolatile_19->setName("isVolatile");
  
  BasicBlock* label_entry_20 = BasicBlock::Create(mod->getContext(), "entry",func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib,0);
  BasicBlock* label_for_body_lr_ph_21 = BasicBlock::Create(mod->getContext(), "for.body.lr.ph",func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib,0);
  BasicBlock* label_for_body_22 = BasicBlock::Create(mod->getContext(), "for.body",func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib,0);
  BasicBlock* label_for_end_23 = BasicBlock::Create(mod->getContext(), "for.end",func__Z25llvm_memcpy_p1i8_p2i8_i32PU3AS1cPU3AS3ciib,0);
  
  // Block entry (label_entry_20)
  ICmpInst* int1_cmp2_24 = new ICmpInst(*label_entry_20, ICmpInst::ICMP_SGT, int32_len_17, const_int32_5, "cmp2");
  BranchInst::Create(label_for_body_lr_ph_21, label_for_end_23, int1_cmp2_24, label_entry_20);
  
  // Block for.body.lr.ph (label_for_body_lr_ph_21)
  GetElementPtrInst* ptr_lftr_limit_26 = GetElementPtrInst::Create(ptr_dest_15, int32_len_17, "lftr.limit", label_for_body_lr_ph_21);
  BranchInst::Create(label_for_body_22, label_for_body_lr_ph_21);
  
  // Block for.body (label_for_body_22)
  Argument* fwdref_29 = new Argument(PointerTy_2);
  PHINode* ptr_dest_addr_05_28 = PHINode::Create(PointerTy_2, 2, "dest.addr.05", label_for_body_22);
  ptr_dest_addr_05_28->addIncoming(ptr_dest_15, label_for_body_lr_ph_21);
  ptr_dest_addr_05_28->addIncoming(fwdref_29, label_for_body_22);
  
  Argument* fwdref_31 = new Argument(PointerTy_1);
  PHINode* ptr_src_addr_04_30 = PHINode::Create(PointerTy_1, 2, "src.addr.04", label_for_body_22);
  ptr_src_addr_04_30->addIncoming(ptr_src_16, label_for_body_lr_ph_21);
  ptr_src_addr_04_30->addIncoming(fwdref_31, label_for_body_22);
  
  GetElementPtrInst* ptr_incdec_ptr_32 = GetElementPtrInst::Create(ptr_src_addr_04_30, const_int32_6, "incdec.ptr", label_for_body_22);
  LoadInst* int8_33 = new LoadInst(ptr_src_addr_04_30, "", false, label_for_body_22);
  int8_33->setAlignment(1);
  GetElementPtrInst* ptr_incdec_ptr1_34 = GetElementPtrInst::Create(ptr_dest_addr_05_28, const_int32_6, "incdec.ptr1", label_for_body_22);
  StoreInst* void_35 = new StoreInst(int8_33, ptr_dest_addr_05_28, false, label_for_body_22);
  void_35->setAlignment(1);
  ICmpInst* int1_exitcond_36 = new ICmpInst(*label_for_body_22, ICmpInst::ICMP_EQ, ptr_incdec_ptr1_34, ptr_lftr_limit_26, "exitcond");
  BranchInst::Create(label_for_end_23, label_for_body_22, int1_exitcond_36, label_for_body_22);
  
  // Block for.end (label_for_end_23)
  ReturnInst::Create(mod->getContext(), label_for_end_23);
  
  // Resolve Forward References
  fwdref_31->replaceAllUsesWith(ptr_incdec_ptr_32); delete fwdref_31;
  fwdref_29->replaceAllUsesWith(ptr_incdec_ptr1_34); delete fwdref_29;
  
 }
 
 // Function: _Z11llvm_memsetPU3AS1cciib (func__Z11llvm_memsetPU3AS1cciib)
 {
  Function::arg_iterator args = func__Z11llvm_memsetPU3AS1cciib->arg_begin();
  Value* ptr_ptr = args++;
  ptr_ptr->setName("ptr");
  Value* int8_p = args++;
  int8_p->setName("p");
  Value* int32_len_39 = args++;
  int32_len_39->setName("len");
  Value* int32_align_40 = args++;
  int32_align_40->setName("align");
  Value* int1_isVolatile_41 = args++;
  int1_isVolatile_41->setName("isVolatile");
  
  BasicBlock* label_entry_42 = BasicBlock::Create(mod->getContext(), "entry",func__Z11llvm_memsetPU3AS1cciib,0);
  BasicBlock* label_for_body_43 = BasicBlock::Create(mod->getContext(), "for.body",func__Z11llvm_memsetPU3AS1cciib,0);
  BasicBlock* label_for_end_44 = BasicBlock::Create(mod->getContext(), "for.end",func__Z11llvm_memsetPU3AS1cciib,0);
  
  // Block entry (label_entry_42)
  ICmpInst* int1_cmp1 = new ICmpInst(*label_entry_42, ICmpInst::ICMP_SGT, int32_len_39, const_int32_5, "cmp1");
  BranchInst::Create(label_for_body_43, label_for_end_44, int1_cmp1, label_entry_42);
  
  // Block for.body (label_for_body_43)
  Argument* fwdref_46 = new Argument(IntegerType::get(mod->getContext(), 32));
  PHINode* int32_i_02 = PHINode::Create(IntegerType::get(mod->getContext(), 32), 2, "i.02", label_for_body_43);
  int32_i_02->addIncoming(fwdref_46, label_for_body_43);
  int32_i_02->addIncoming(const_int32_5, label_entry_42);
  
  GetElementPtrInst* ptr_arrayidx = GetElementPtrInst::Create(ptr_ptr, int32_i_02, "arrayidx", label_for_body_43);
  StoreInst* void_47 = new StoreInst(int8_p, ptr_arrayidx, false, label_for_body_43);
  void_47->setAlignment(1);
  BinaryOperator* int32_inc = BinaryOperator::Create(Instruction::Add, int32_i_02, const_int32_6, "inc", label_for_body_43);
  ICmpInst* int1_exitcond_48 = new ICmpInst(*label_for_body_43, ICmpInst::ICMP_EQ, int32_inc, int32_len_39, "exitcond");
  BranchInst::Create(label_for_end_44, label_for_body_43, int1_exitcond_48, label_for_body_43);
  
  // Block for.end (label_for_end_44)
  ReturnInst::Create(mod->getContext(), label_for_end_44);
  
  // Resolve Forward References
  fwdref_46->replaceAllUsesWith(int32_inc); delete fwdref_46;
  
 }
 
 return mod;
}
